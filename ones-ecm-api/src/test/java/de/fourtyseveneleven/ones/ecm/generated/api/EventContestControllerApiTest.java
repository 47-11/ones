/*
 * vdd4ones
 * Rest-Interface for ONES
 *
 * The version of the OpenAPI document: 1.0a
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.fourtyseveneleven.ones.ecm.generated.api;

import de.fourtyseveneleven.ones.ecm.generated.ApiException;
import de.fourtyseveneleven.ones.ecm.generated.model.EventContestCompetitionResult;
import de.fourtyseveneleven.ones.ecm.generated.model.EventContestPlain;
import java.time.OffsetDateTime;
import de.fourtyseveneleven.ones.ecm.generated.model.RegisterNomination;
import de.fourtyseveneleven.ones.ecm.generated.model.RegisterResponce;
import de.fourtyseveneleven.ones.ecm.generated.model.ResponcePageContests;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for EventContestControllerApi
 */
@Ignore
public class EventContestControllerApiTest {

    private final EventContestControllerApi api = new EventContestControllerApi();

    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAccountContestCompetitionsResultsTest() throws ApiException {
        String uuid = null;
        List<EventContestCompetitionResult> response = 
        api.getAccountContestCompetitionsResults(uuid);
        
        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getContestByUuidTest() throws ApiException {
        String contestUuid = null;
        String accountUuid = null;
        EventContestPlain response = 
        api.getContestByUuid(contestUuid, accountUuid);
        
        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getContestByYearTest() throws ApiException {
        OffsetDateTime fromDate = null;
        OffsetDateTime untilDate = null;
        List<String> countryRegions = null;
        List<String> contestKinds = null;
        Integer isCountryChampionship = null;
        Integer isCEI = null;
        Integer isCard = null;
        Boolean onlyRegistered = null;
        String accountUuid = null;
        Integer pageNo = null;
        Integer pageSize = null;
        String sortBy = null;
        ResponcePageContests response = 
        api.getContestByYear(fromDate, untilDate, countryRegions, contestKinds, isCountryChampionship, isCEI, isCard, onlyRegistered, accountUuid, pageNo, pageSize, sortBy);
        
        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCurrentContestCompetitionsResultsTest() throws ApiException {
        List<EventContestCompetitionResult> response = 
        api.getCurrentContestCompetitionsResults();
        
        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postAccountNominationTest() throws ApiException {
        String uuid = null;
        RegisterNomination registerNomination = null;
        RegisterResponce response = 
        api.postAccountNomination(uuid, registerNomination);
        
        // TODO: test validations
    }
    
}
