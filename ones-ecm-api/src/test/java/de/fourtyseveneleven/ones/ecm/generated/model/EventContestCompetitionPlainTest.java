/*
 * vdd4ones
 * Rest-Interface for ONES
 *
 * The version of the OpenAPI document: 1.0a
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.fourtyseveneleven.ones.ecm.generated.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.fourtyseveneleven.ones.ecm.generated.model.EventContestCompetitionStagePlain;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for EventContestCompetitionPlain
 */
public class EventContestCompetitionPlainTest {
    private final EventContestCompetitionPlain model = new EventContestCompetitionPlain();

    /**
     * Model tests for EventContestCompetitionPlain
     */
    @Test
    public void testEventContestCompetitionPlain() {
        // TODO: test EventContestCompetitionPlain
    }

    /**
     * Test the property 'uuid'
     */
    @Test
    public void uuidTest() {
        // TODO: test uuid
    }

    /**
     * Test the property 'creationTimestamp'
     */
    @Test
    public void creationTimestampTest() {
        // TODO: test creationTimestamp
    }

    /**
     * Test the property 'creationUserUuid'
     */
    @Test
    public void creationUserUuidTest() {
        // TODO: test creationUserUuid
    }

    /**
     * Test the property 'changeTimestamp'
     */
    @Test
    public void changeTimestampTest() {
        // TODO: test changeTimestamp
    }

    /**
     * Test the property 'changeUserUuid'
     */
    @Test
    public void changeUserUuidTest() {
        // TODO: test changeUserUuid
    }

    /**
     * Test the property 'changeCounter'
     */
    @Test
    public void changeCounterTest() {
        // TODO: test changeCounter
    }

    /**
     * Test the property 'currentState'
     */
    @Test
    public void currentStateTest() {
        // TODO: test currentState
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'kind'
     */
    @Test
    public void kindTest() {
        // TODO: test kind
    }

    /**
     * Test the property 'beginning'
     */
    @Test
    public void beginningTest() {
        // TODO: test beginning
    }

    /**
     * Test the property 'ending'
     */
    @Test
    public void endingTest() {
        // TODO: test ending
    }

    /**
     * Test the property 'raiseLength'
     */
    @Test
    public void raiseLengthTest() {
        // TODO: test raiseLength
    }

    /**
     * Test the property 'minutesMaximum'
     */
    @Test
    public void minutesMaximumTest() {
        // TODO: test minutesMaximum
    }

    /**
     * Test the property 'minutesAllowed'
     */
    @Test
    public void minutesAllowedTest() {
        // TODO: test minutesAllowed
    }

    /**
     * Test the property 'penaltyPointsTimeout'
     */
    @Test
    public void penaltyPointsTimeoutTest() {
        // TODO: test penaltyPointsTimeout
    }

    /**
     * Test the property 'penaltyPointsTimeUnderrun'
     */
    @Test
    public void penaltyPointsTimeUnderrunTest() {
        // TODO: test penaltyPointsTimeUnderrun
    }

    /**
     * Test the property 'penaltyPointsAtPulseRateOf'
     */
    @Test
    public void penaltyPointsAtPulseRateOfTest() {
        // TODO: test penaltyPointsAtPulseRateOf
    }

    /**
     * Test the property 'penaltyPointsPulseRateExceeded'
     */
    @Test
    public void penaltyPointsPulseRateExceededTest() {
        // TODO: test penaltyPointsPulseRateExceeded
    }

    /**
     * Test the property 'breaksTotalNumbers'
     */
    @Test
    public void breaksTotalNumbersTest() {
        // TODO: test breaksTotalNumbers
    }

    /**
     * Test the property 'breaksTotalMinutes'
     */
    @Test
    public void breaksTotalMinutesTest() {
        // TODO: test breaksTotalMinutes
    }

    /**
     * Test the property 'responsibleVeterinarianUuid'
     */
    @Test
    public void responsibleVeterinarianUuidTest() {
        // TODO: test responsibleVeterinarianUuid
    }

    /**
     * Test the property 'competitionUuidToExtend'
     */
    @Test
    public void competitionUuidToExtendTest() {
        // TODO: test competitionUuidToExtend
    }

    /**
     * Test the property 'competitionUuidToReduce'
     */
    @Test
    public void competitionUuidToReduceTest() {
        // TODO: test competitionUuidToReduce
    }

    /**
     * Test the property 'contestantLimitiationMin'
     */
    @Test
    public void contestantLimitiationMinTest() {
        // TODO: test contestantLimitiationMin
    }

    /**
     * Test the property 'contestantLimitiationMax'
     */
    @Test
    public void contestantLimitiationMaxTest() {
        // TODO: test contestantLimitiationMax
    }

    /**
     * Test the property 'datePreliminaryExamination'
     */
    @Test
    public void datePreliminaryExaminationTest() {
        // TODO: test datePreliminaryExamination
    }

    /**
     * Test the property 'infoPreliminaryExamination'
     */
    @Test
    public void infoPreliminaryExaminationTest() {
        // TODO: test infoPreliminaryExamination
    }

    /**
     * Test the property 'datePreliminaryDiscussion'
     */
    @Test
    public void datePreliminaryDiscussionTest() {
        // TODO: test datePreliminaryDiscussion
    }

    /**
     * Test the property 'infoPreliminaryDiscussion'
     */
    @Test
    public void infoPreliminaryDiscussionTest() {
        // TODO: test infoPreliminaryDiscussion
    }

    /**
     * Test the property 'dateFollowUpExamination'
     */
    @Test
    public void dateFollowUpExaminationTest() {
        // TODO: test dateFollowUpExamination
    }

    /**
     * Test the property 'infoFollowUpExamination'
     */
    @Test
    public void infoFollowUpExaminationTest() {
        // TODO: test infoFollowUpExamination
    }

    /**
     * Test the property 'dateTransferRelease'
     */
    @Test
    public void dateTransferReleaseTest() {
        // TODO: test dateTransferRelease
    }

    /**
     * Test the property 'infoTransferRelease'
     */
    @Test
    public void infoTransferReleaseTest() {
        // TODO: test infoTransferRelease
    }

    /**
     * Test the property 'dateAwardCeremony'
     */
    @Test
    public void dateAwardCeremonyTest() {
        // TODO: test dateAwardCeremony
    }

    /**
     * Test the property 'infoAwardCeremony'
     */
    @Test
    public void infoAwardCeremonyTest() {
        // TODO: test infoAwardCeremony
    }

    /**
     * Test the property 'vddQualificationLevel'
     */
    @Test
    public void vddQualificationLevelTest() {
        // TODO: test vddQualificationLevel
    }

    /**
     * Test the property 'altitudeMeters'
     */
    @Test
    public void altitudeMetersTest() {
        // TODO: test altitudeMeters
    }

    /**
     * Test the property 'feeCurrency'
     */
    @Test
    public void feeCurrencyTest() {
        // TODO: test feeCurrency
    }

    /**
     * Test the property 'registrationFee'
     */
    @Test
    public void registrationFeeTest() {
        // TODO: test registrationFee
    }

    /**
     * Test the property 'registrationFeeUnit'
     */
    @Test
    public void registrationFeeUnitTest() {
        // TODO: test registrationFeeUnit
    }

    /**
     * Test the property 'startingFee'
     */
    @Test
    public void startingFeeTest() {
        // TODO: test startingFee
    }

    /**
     * Test the property 'startingFeeUnit'
     */
    @Test
    public void startingFeeUnitTest() {
        // TODO: test startingFeeUnit
    }

    /**
     * Test the property 'scoringMinimumTime'
     */
    @Test
    public void scoringMinimumTimeTest() {
        // TODO: test scoringMinimumTime
    }

    /**
     * Test the property 'scoringPeakTime'
     */
    @Test
    public void scoringPeakTimeTest() {
        // TODO: test scoringPeakTime
    }

    /**
     * Test the property 'horseAgeMin'
     */
    @Test
    public void horseAgeMinTest() {
        // TODO: test horseAgeMin
    }

    /**
     * Test the property 'horseAgeMax'
     */
    @Test
    public void horseAgeMaxTest() {
        // TODO: test horseAgeMax
    }

    /**
     * Test the property 'contestantAgeMin'
     */
    @Test
    public void contestantAgeMinTest() {
        // TODO: test contestantAgeMin
    }

    /**
     * Test the property 'contestantAgeMax'
     */
    @Test
    public void contestantAgeMaxTest() {
        // TODO: test contestantAgeMax
    }

    /**
     * Test the property 'contestantQuantityMin'
     */
    @Test
    public void contestantQuantityMinTest() {
        // TODO: test contestantQuantityMin
    }

    /**
     * Test the property 'contestantQuantityMax'
     */
    @Test
    public void contestantQuantityMaxTest() {
        // TODO: test contestantQuantityMax
    }

    /**
     * Test the property 'hoofProtection'
     */
    @Test
    public void hoofProtectionTest() {
        // TODO: test hoofProtection
    }

    /**
     * Test the property 'descriptionRoute'
     */
    @Test
    public void descriptionRouteTest() {
        // TODO: test descriptionRoute
    }

    /**
     * Test the property 'typeOfRouting'
     */
    @Test
    public void typeOfRoutingTest() {
        // TODO: test typeOfRouting
    }

    /**
     * Test the property 'descriptionStart'
     */
    @Test
    public void descriptionStartTest() {
        // TODO: test descriptionStart
    }

    /**
     * Test the property 'descriptionTerrain'
     */
    @Test
    public void descriptionTerrainTest() {
        // TODO: test descriptionTerrain
    }

    /**
     * Test the property 'descriptionControlchecks'
     */
    @Test
    public void descriptionControlchecksTest() {
        // TODO: test descriptionControlchecks
    }

    /**
     * Test the property 'ratingType'
     */
    @Test
    public void ratingTypeTest() {
        // TODO: test ratingType
    }

    /**
     * Test the property 'descriptionRatingType'
     */
    @Test
    public void descriptionRatingTypeTest() {
        // TODO: test descriptionRatingType
    }

    /**
     * Test the property 'stages'
     */
    @Test
    public void stagesTest() {
        // TODO: test stages
    }

}
